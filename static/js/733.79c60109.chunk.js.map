{"version":3,"file":"static/js/733.79c60109.chunk.js","mappings":"qOAIaA,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAc7B,OACE,kBAAMC,SAbW,SAAAC,GACjBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,OACbC,EAAOJ,EAAMG,OAAOC,KAAKC,MACzBC,EAASN,EAAMG,OAAOG,OAAOD,MACnC,GAAIT,EAASW,MAAK,SAAAC,GAAI,OAAIA,EAAKJ,KAAKK,gBAAkBL,EAAKK,aAArC,IACpB,OAAOC,MAAM,GAAD,OAAIN,EAAJ,+GAEdF,EAAKS,QACLjB,GAASkB,EAAAA,EAAAA,IAAW,CAAER,KAAAA,EAAME,OAAAA,IAC7B,EAGC,WACE,sCACA,kBACEO,KAAK,OACLT,KAAK,OACLU,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,YAAY,gBAEd,wCACA,kBACEJ,KAAK,MACLT,KAAK,SACLU,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,YAAY,wBAEd,mBAAQJ,KAAK,SAAb,2BAGL,E,UCxCYK,EAAS,WACpB,IAAMxB,GAAWC,EAAAA,EAAAA,MAKjB,OACE,4BACE,uDACA,kBACEkB,KAAK,OACLT,KAAK,SACLa,YAAY,eACZE,SAXe,SAAAC,GACnB1B,GAAS2B,EAAAA,EAAAA,GAAkBD,EAAEjB,OAAOE,OACrC,MAaF,ECaD,EA7BoB,WAClB,IAAMX,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBwB,GAAczB,EAAAA,EAAAA,IAAY0B,EAAAA,IAAWd,cACrCe,EAAe,SAAAJ,GACnB1B,GAAS+B,EAAAA,EAAAA,IAAcL,EAAEjB,OAAOC,MACjC,EASKsB,EAPCJ,GAA+B,KAAhBA,EAGb1B,EAAS+B,QAAO,SAAAC,GACrB,OAAOA,EAAQxB,KAAKK,cAAcoB,SAASP,EAC5C,IAJQ1B,EAOX,OACE,wBACG8B,EAAeI,KAAI,SAAAF,GAAO,OACzB,0BACGA,EAAQxB,KADX,KACmBwB,EAAQtB,QACzB,mBAAQO,KAAK,SAAST,KAAMwB,EAAQG,GAAIC,QAASR,EAAjD,sBAFOI,EAAQG,GADQ,KAUhC,E,UCGD,EA5BiB,WACf,IAAMrC,GAAWC,EAAAA,EAAAA,MAMjB,OAJAsC,EAAAA,EAAAA,YAAU,WACRvC,GAASwC,EAAAA,EAAAA,MACV,GAAE,CAACxC,KAGF,iBACEyC,MAAO,CACLC,OAAQ,QACRC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZC,SAAU,GACVC,MAAO,WARX,WAWE,uCACA,SAACjD,EAAD,KACA,uCACA,SAACyB,EAAD,KACA,SAAC,EAAD,MAGL,C","sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","pages/Contacts.js"],"sourcesContent":["import { addContact } from 'redux/contacts/operations';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from 'redux/contacts/selectors';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const formSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const name = event.target.name.value;\n    const number = event.target.number.value;\n    if (contacts.find(item => item.name.toLowerCase() === name.toLowerCase())) {\n      return alert(`${name} вже в книзі контакті`);\n    }\n    form.reset();\n    dispatch(addContact({ name, number }));\n  };\n\n  return (\n    <form onSubmit={formSubmit}>\n      <label>Name </label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        placeholder=\"Enter name\"\n      />\n      <label>Number </label>\n      <input\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        placeholder=\"Enter phone number\"\n      />\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { setFilterContacts } from 'redux/contacts/filterslice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const handleChange = e => {\n    dispatch(setFilterContacts(e.target.value));\n  };\n\n  return (\n    <div>\n      <label>Find contacts by Name </label>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter filter\"\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getContacts, getFilter } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const filterValue = useSelector(getFilter).toLowerCase();\n  const handleDelete = e => {\n    dispatch(deleteContact(e.target.name));\n  };\n  const getVisibleContacts = () => {\n    if (!filterValue || filterValue === '') {\n      return contacts;\n    }\n    return contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(filterValue);\n    });\n  };\n  const visibleContact = getVisibleContacts();\n  return (\n    <ul>\n      {visibleContact.map(contact => (\n        <li key={contact.id}>\n          {contact.name}: {contact.number}\n          <button type=\"button\" name={contact.id} onClick={handleDelete}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\nexport default ContactList;","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport  ContactList  from 'components/ContactList/ContactList';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { useEffect } from 'react';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div\n      style={{\n        height: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 20,\n        color: '#010101',\n      }}\n    >\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2> Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["ContactForm","dispatch","useDispatch","contacts","useSelector","getContacts","onSubmit","event","preventDefault","form","target","name","value","number","find","item","toLowerCase","alert","reset","addContact","type","pattern","title","required","placeholder","Filter","onChange","e","setFilterContacts","filterValue","getFilter","handleDelete","deleteContact","visibleContact","filter","contact","includes","map","id","onClick","useEffect","fetchContacts","style","height","display","flexDirection","justifyContent","alignItems","fontSize","color"],"sourceRoot":""}