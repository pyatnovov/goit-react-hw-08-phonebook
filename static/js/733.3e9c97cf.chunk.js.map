{"version":3,"file":"static/js/733.3e9c97cf.chunk.js","mappings":"iOAIaA,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAc7B,OACE,kBAAMC,SAbW,SAAAC,GACjBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,OACbC,EAAOJ,EAAMG,OAAOC,KAAKC,MACzBC,EAAQN,EAAMG,OAAOI,OAAOF,MAClC,GAAIT,EAASY,MAAK,SAAAC,GAAI,OAAIA,EAAKL,KAAKM,gBAAkBN,EAAKM,aAArC,IACpB,OAAOC,MAAM,GAAD,OAAIP,EAAJ,+GAEdF,EAAKU,QACLlB,GAASmB,EAAAA,EAAAA,IAAW,CAAET,KAAAA,EAAME,MAAAA,IAC7B,EAGC,WACE,sCACA,kBACEQ,KAAK,OACLV,KAAK,OACLW,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,YAAY,gBAEd,wCACA,kBACEJ,KAAK,MACLV,KAAK,SACLW,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,YAAY,wBAEd,mBAAQJ,KAAK,SAAb,2BAGL,E,UCxCYK,EAAS,WACpB,IAAMzB,GAAWC,EAAAA,EAAAA,MAKjB,OACE,4BACE,uDACA,kBACEmB,KAAK,OACLV,KAAK,SACLc,YAAY,eACZE,SAXe,SAAAC,GACnB3B,GAAS4B,EAAAA,EAAAA,GAAkBD,EAAElB,OAAOE,OACrC,MAaF,EChBYkB,EAAc,WACzB,IAAM7B,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvB0B,GAAc3B,EAAAA,EAAAA,IAAY4B,EAAAA,IAAWf,cACrCgB,EAAe,SAAAL,GACnB3B,GAASiC,EAAAA,EAAAA,IAAcN,EAAElB,OAAOC,MACjC,EASKwB,EAPCJ,GAA+B,KAAhBA,EAGb5B,EAASiC,QAAO,SAAAC,GACrB,OAAOA,EAAQ1B,KAAKM,cAAcqB,SAASP,EAC5C,IAJQ5B,EAOX,OACE,wBACGgC,EAAeI,KAAI,SAAAF,GAAO,OACzB,0BACGA,EAAQ1B,KADX,KACmB0B,EAAQxB,OACzB,mBAAQQ,KAAK,SAASV,KAAM0B,EAAQG,GAAIC,QAASR,EAAjD,sBAFOI,EAAQG,GADQ,KAUhC,E,UCzBYE,EAAM,WACjB,IAAMzC,GAAWC,EAAAA,EAAAA,MAMjB,OAJAyC,EAAAA,EAAAA,YAAU,WACR1C,GAAS2C,EAAAA,EAAAA,MACV,GAAE,CAAC3C,KAGF,iBACE4C,MAAO,CACLC,OAAQ,QACRC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZC,SAAU,GACVC,MAAO,WARX,WAWE,uCACA,SAACpD,EAAD,KACA,uCACA,SAAC0B,EAAD,KACA,SAACI,EAAD,MAGL,C","sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","pages/Contacts.js"],"sourcesContent":["import { addContact } from 'redux/contacts/operations';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from 'redux/contacts/selectors';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const formSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const name = event.target.name.value;\n    const phone = event.target.number.value;\n    if (contacts.find(item => item.name.toLowerCase() === name.toLowerCase())) {\n      return alert(`${name} вже в книзі контакті`);\n    }\n    form.reset();\n    dispatch(addContact({ name, phone }));\n  };\n\n  return (\n    <form onSubmit={formSubmit}>\n      <label>Name </label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        placeholder=\"Enter name\"\n      />\n      <label>Number </label>\n      <input\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        placeholder=\"Enter phone number\"\n      />\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { setFilterContacts } from 'redux/contacts/filterslice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const handleChange = e => {\n    dispatch(setFilterContacts(e.target.value));\n  };\n\n  return (\n    <div>\n      <label>Find contacts by Name </label>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter filter\"\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getContacts, getFilter } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const filterValue = useSelector(getFilter).toLowerCase();\n  const handleDelete = e => {\n    dispatch(deleteContact(e.target.name));\n  };\n  const getVisibleContacts = () => {\n    if (!filterValue || filterValue === '') {\n      return contacts;\n    }\n    return contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(filterValue);\n    });\n  };\n  const visibleContact = getVisibleContacts();\n  return (\n    <ul>\n      {visibleContact.map(contact => (\n        <li key={contact.id}>\n          {contact.name}: {contact.phone}\n          <button type=\"button\" name={contact.id} onClick={handleDelete}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { useEffect } from 'react';\n\nexport const App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div\n      style={{\n        height: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 20,\n        color: '#010101',\n      }}\n    >\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2> Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n"],"names":["ContactForm","dispatch","useDispatch","contacts","useSelector","getContacts","onSubmit","event","preventDefault","form","target","name","value","phone","number","find","item","toLowerCase","alert","reset","addContact","type","pattern","title","required","placeholder","Filter","onChange","e","setFilterContacts","ContactList","filterValue","getFilter","handleDelete","deleteContact","visibleContact","filter","contact","includes","map","id","onClick","App","useEffect","fetchContacts","style","height","display","flexDirection","justifyContent","alignItems","fontSize","color"],"sourceRoot":""}